@page "/pessoas"
@using EstudoCursor.Client.Domain.Entities
@using EstudoCursor.Client.Application.Services
@inject PessoaService PessoaService
@inject ISnackbar Snackbar

<PageTitle>Cadastro de Pessoas</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudPaper Class="pa-4">
        <MudText Typo="Typo.h4" Class="mb-4">Cadastro de Pessoas</MudText>
        
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Primary" 
                   StartIcon="@Icons.Material.Filled.Add"
                   OnClick="AbrirDialogoAdicionar"
                   Class="mb-4">
            Nova Pessoa
        </MudButton>

        @if (_pessoas == null)
        {
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        }
        else if (!_pessoas.Any())
        {
            <MudAlert Severity="Severity.Info" Class="mt-4">
                Nenhuma pessoa cadastrada. Clique em "Nova Pessoa" para começar.
            </MudAlert>
        }
        else
        {
            <MudTable Items="@_pessoas" Dense="true" Hover="true" Striped="true" Class="mt-4">
                <HeaderContent>
                    <MudTh>Nome</MudTh>
                    <MudTh>Data de Nascimento</MudTh>
                    <MudTh>Idade</MudTh>
                    <MudTh>E-mail</MudTh>
                    <MudTh>CPF</MudTh>
                    <MudTh>Ações</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Nome">@context.Nome</MudTd>
                    <MudTd DataLabel="Data de Nascimento">@context.DataNascimento.ToString("dd/MM/yyyy")</MudTd>
                    <MudTd DataLabel="Idade">@context.Idade anos</MudTd>
                    <MudTd DataLabel="E-mail">@context.Email</MudTd>
                    <MudTd DataLabel="CPF">@context.CPF</MudTd>
                    <MudTd>
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" 
                                     Color="Color.Primary" 
                                     OnClick="@(() => AbrirDialogoEditar(context))" />
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" 
                                     Color="Color.Error" 
                                     OnClick="@(() => ConfirmarRemocao(context))" />
                    </MudTd>
                </RowTemplate>
            </MudTable>
        }
    </MudPaper>
</MudContainer>

@if (_mostrarDialogo)
{
    <PessoaDialogo @ref="_dialogo" 
                   Pessoa="@_pessoaEmEdicao" 
                   OnSalvar="SalvarPessoa" 
                   OnCancelar="FecharDialogo" />
}

@if (_mostrarConfirmacao)
{
    <MudDialog @bind-IsVisible="_mostrarConfirmacao">
        <TitleContent>
            <MudText Typo="Typo.h6">Confirmar Exclusão</MudText>
        </TitleContent>
        <DialogContent>
            <MudText>
                Tem certeza que deseja excluir a pessoa "@_pessoaParaRemover?.Nome"?
            </MudText>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="FecharConfirmacao">Cancelar</MudButton>
            <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="RemoverPessoa">Excluir</MudButton>
        </DialogActions>
    </MudDialog>
}

@code {
    private List<Pessoa>? _pessoas;
    private bool _mostrarDialogo;
    private bool _mostrarConfirmacao;
    private Pessoa? _pessoaEmEdicao;
    private Pessoa? _pessoaParaRemover;
    private PessoaDialogo? _dialogo;

    protected override async Task OnInitializedAsync()
    {
        await CarregarPessoas();
    }

    private async Task CarregarPessoas()
    {
        try
        {
            var pessoas = await PessoaService.ObterTodasAsync();
            _pessoas = pessoas.ToList();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao carregar pessoas: {ex.Message}", Severity.Error);
        }
    }

    private void AbrirDialogoAdicionar()
    {
        _pessoaEmEdicao = new Pessoa();
        _mostrarDialogo = true;
    }

    private void AbrirDialogoEditar(Pessoa pessoa)
    {
        _pessoaEmEdicao = new Pessoa
        {
            Id = pessoa.Id,
            Nome = pessoa.Nome,
            DataNascimento = pessoa.DataNascimento,
            Email = pessoa.Email,
            CPF = pessoa.CPF
        };
        _mostrarDialogo = true;
    }

    private async Task SalvarPessoa(Pessoa pessoa)
    {
        try
        {
            if (pessoa.Id == Guid.Empty)
            {
                await PessoaService.AdicionarAsync(pessoa);
                Snackbar.Add("Pessoa cadastrada com sucesso!", Severity.Success);
            }
            else
            {
                await PessoaService.AtualizarAsync(pessoa);
                Snackbar.Add("Pessoa atualizada com sucesso!", Severity.Success);
            }

            await CarregarPessoas();
            FecharDialogo();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Erro ao salvar pessoa: {ex.Message}", Severity.Error);
        }
    }

    private void FecharDialogo()
    {
        _mostrarDialogo = false;
        _pessoaEmEdicao = null;
    }

    private void ConfirmarRemocao(Pessoa pessoa)
    {
        _pessoaParaRemover = pessoa;
        _mostrarConfirmacao = true;
    }

    private async Task RemoverPessoa()
    {
        if (_pessoaParaRemover != null)
        {
            try
            {
                var removido = await PessoaService.RemoverAsync(_pessoaParaRemover.Id);
                if (removido)
                {
                    Snackbar.Add("Pessoa removida com sucesso!", Severity.Success);
                    await CarregarPessoas();
                }
                else
                {
                    Snackbar.Add("Erro ao remover pessoa", Severity.Error);
                }
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Erro ao remover pessoa: {ex.Message}", Severity.Error);
            }
        }
        FecharConfirmacao();
    }

    private void FecharConfirmacao()
    {
        _mostrarConfirmacao = false;
        _pessoaParaRemover = null;
    }
} 